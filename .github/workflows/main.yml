name: Build Docker Image with Caching

# Trigger workflow on pushes to main/develop and on pull requests targeting main/develop
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Docker Buildx (required for advanced caching)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker registry (optional if pushing to Docker Hub/GitHub Container Registry)
      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io        # Change to your registry (e.g., docker.io)
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Build Docker image with caching
      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true                     # Set to true to push the image to the registry
          file: ./Dockerfile             # Path to your Dockerfile
          tags: ghcr.io/${{ github.repository }}/my-app:latest
          cache-from: type=gha           # Use GitHub Actions cache as source
          cache-to: type=gha,mode=max    # Save build cache for future runs
          build-args:                    # Optional: pass build arguments
            PYTHON_VERSION: 3.12
          platforms: linux/amd64,linux/arm64 # Optional: multi-arch build

      # Step 5: Optional: output image digest
      - name: Image digest
        run: echo "Docker image digest: ${{ steps.build.outputs.digest }}"
